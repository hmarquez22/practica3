Exercici 0 (40% de la nota)

Teniu el codi de partida a la carpeta tui_lliurament. Heu de substituir el mètode init() pel mètode initTui(). Des del mètode psvm cridarem initTui() enlloc de cridar init().

En aquest cas he eliminat la classe Arrays per fer el codi més simple. Per tant, el codi que trobareu a la carpeta tui_lliurament només imprimirà la llista desordenada d'estudiants, tal qual està a l'array d'Student. No imprimirà les llistes ordenades dels estudiants tal com feia a l'anterior UF (i tal com teniu a la carpeta students).

El mètode initTui() (que heu d'implementar) preguntarà primer a l'usuari quants estudiants vol afegir a l'array d'estudiants, i després preguntarà a l'usuari el nom, l'edat i el número d'assignatures matriculades per a cadascun dels estudiants.

Heu d'usar la classe Scanner i System.in de manera similar als exemples explicats abans en la secció de conceptes previs.

El resultat (a banda d'imprimir la llista dels estudiants) ha de ser el següent. Amb això, crearem l'array d'estudiants amb les dades introduïdes des del teclat:

Number of students: 2
Number of students is: 2
---- Student number 1 ----
Enter name: Joan
Enter age: 22
Enter nº enrolled subjects: 4
---- Student number 2 ----
Enter name: Laura
Enter age: 29
Enter nº enrolled subjects: 6



-- SOLUCIÓ DE L'EXERCICI --

Obrim eclipse y creem un nou package: practica3

Dins del package practica 3 tenim 4 classes java:

Main, Student i Tui

Codi que hem de introduir a cada clase per a que el programa executi el que demana l'enunciat:


Main.java: 

package practica3;

import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);

				System.out.print("Quants anys tens? ");
				int age = in.nextInt();

				System.out.println("Tens " + age + " anys");

				in.close();
		}

}

Student.java: 

package practica3;

import java.util.Scanner;

public class Student {
    public String name;
    public int age;
    public int amountOfEnrolledSubjects;

    public Student(String name, int age, int amountOfEnrolledSubjects) {
        this.name = name;
        this.age = age;
        this.amountOfEnrolledSubjects = amountOfEnrolledSubjects;
    }

    @Override
    public String toString(){
        return "Name: " + name + "\t\t" +
                "Age: " + age + "\t\t" +
                "Subjects: " + amountOfEnrolledSubjects;
    }
}

Tui.java: 

package practica3;

import java.util.ArrayList;
import java.util.Scanner;

public class Tui {
    private ArrayList<Student> students;

    public Tui() {
        students = new ArrayList<>();
    }

    public void initTui() {
        Scanner sc = new Scanner(System.in);

        System.out.println("Introduce el número de estudiantes a agregar:");
        int numStudents = sc.nextInt();

        for (int i = 0; i < numStudents; i++) {
            System.out.println("Introduce el nombre del estudiante " + (i + 1) + ":");
            String name = sc.next();

            System.out.println("Introduce la edad del estudiante " + (i + 1) + ":");
            int age = sc.nextInt();

            System.out.println("Introduce el número de asignaturas matriculadas del estudiante " + (i + 1) + ":");
            int numSubjects = sc.nextInt();

        }

        System.out.println("Lista de estudiantes:");
        System.out.println(students.toString());
    }

    public static void main(String[] args) {
        Tui tui = new Tui();
        tui.initTui();
    }
}

Exercici 1 (35% de la nota)

En aquest exercici heu de completar el programa que trobareu a la carpeta files_lliurament de manera que, a banda d'imprimir per pantalla la llista dels alumnes, també haurà de guardar la llista en un fitxer, que s'anomenarà students.out, i després haurà de llegir el contingut del fitxer, que també haurà d'imprimir per pantalla.

Per a guardar aquesta informació en un fitxer, heu d'usar les classes FileWriter, FileReader tal com s'expliquen en els conceptes previs d'aquesta pràctica, no heu d'usar les classes BufferedWriter i BufferedReader.

-- SOLUCIÓ DE L'EXERCICI --

Dins del package practica3, creem una nova clase: App.java

Dins de la clase App.Java, hem de introduir el següent codi:

package practica3;

import java.io.*;

public class App {
    public static void main(String[] args) throws IOException {
        // Creem l'array d'estudiants:
        Student students[] = init();

        File file = new File("students.out");

        String message = "Llista desordenada:";

        // Imprimeix tots els estudiants
        // de forma desordenada
        printStudents(students, message);

        // Guardar la llista d'estudiants al fitxer students.out
        saveToFile(students, message, file, false);

        // Tornar a imprimir la llista d'estudiants
        // llegint-la del fitxer students.out
        String content = readFromFile(file);
        System.out.println(content);
    }

    static String readFromFile(File file) throws IOException {
        FileReader reader = new FileReader(file);
        StringBuilder sb = new StringBuilder();

        int character;
        while ((character = reader.read()) != -1) {
            sb.append((char) character);
        }

        reader.close();

        return sb.toString();
    }

    static void saveToFile(Student[] students, String message,
                           File file, boolean append) throws IOException {
        FileWriter writer = new FileWriter(file, append);

        writer.write(buildListString(students, message));

        writer.close();
    }

    // Mètode que imprimeix la llista d'estudiants
    // Delega la creació de l'String al mètode
    // buildStudentListString
    static void printStudents(Student[] students,
                              String message) {
        System.out.println(buildListString(students, message));
    }

    // Mètode que genera un String amb la llista d'estudiants
    static String buildListString(Student[] students, String message) {
        StringBuilder sb = new StringBuilder();
        sb.append("\n**** ");
        sb.append(message);
        sb.append(" ****\n");
        for (Student s : students) {
            sb.append(s.toString());
            sb.append("\n");
        }
        sb.append("\n");
        return sb.toString();
    }

    // Mètode que genera un array d'estudiants
    static Student[] init() {
        Student students[] = new Student[10];

        students[0] = new Student("Laura", 25, 6);
        students[1] = new Student("Joan", 29, 7);
        students[2] = new Student("Carme", 38, 4);
        students[3] = new Student("Oriol", 21, 9);
        students[4] = new Student("Sergi", 36, 7);
        students[5] = new Student("Laia", 31, 5);
        students[6] = new Student("Abril", 41, 4);
        students[7] = new Student("Jordi", 30, 7);
        students[8] = new Student("Carla", 32, 6);
        students[9] = new Student("Ritxi", 28, 3);

        return students;
    }
}

Aquest programa crea un array de 10 objectes de tipus Student amb diferents atributs (nom, edat i nota)

Després, a l'executar el programa, aquest imprimeix tots els estudiants a la llista sense ordenar

A continuació, guarda la llista d'estudiants en un archiu anomenat "students.out".

Torna a imprimir la llista d'estudiants llegint-la de l'archiu "students.out".


Exercici 2 (25% de la nota)

En aquest exercici heu de completar el codi que falta en el programa que trobareu a la carpeta files_lliurament2, però ara usant també BufferedWriter i BufferedReader.

-- SOLUCIÓ DE L'EXERCICI

Dins del package practica3, creem una nova clase anomenada App2.java

Dins de App2.java, introdium el següent codi:

package practica3;

import java.io.*;
import java.net.URL;
import java.net.URLConnection;

public class App2 {

    public static void main(String[] args) throws Exception {

        // Crear un archivo con la clase File
        // el nombre del archivo será testfile.html
        File file = new File("testfile.html");

        String str = urlReader("http://inslaguineueta.cat");

        // llamar a la función para que guarde str en el archivo
        saveToFile(str, file, false);

        // Leer el contenido del archivo y imprimirlo por pantalla
        String content = readFromFile(file);
        System.out.println(content);
    }

    static String readFromFile(File file) throws IOException {
        // Usando FileReader y BufferedReader
        BufferedReader reader = new BufferedReader(new FileReader(file));
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            sb.append(line);
        }
        reader.close();
        return sb.toString();
    }

    static void saveToFile(String str, File file, boolean append) throws IOException {
        // Usando FileWriter y BufferedWriter
        FileWriter writer = new FileWriter(file, append);
        BufferedWriter bw = new BufferedWriter(writer);
        bw.write(str);
        bw.close();
        writer.close();
    }

    public static String urlReader(String url) throws Exception {
        URL oracle = new URL(url);
        URLConnection yc = oracle.openConnection();
        BufferedReader in = new BufferedReader(new InputStreamReader(yc.getInputStream()));
        String inputLine;
        StringBuilder sb = new StringBuilder();
        while ((inputLine = in.readLine()) != null) {
            sb.append(inputLine);
        }
        in.close();
        return sb.toString();
    }

}


El programa descarrega el contingut d'un URL usant urlReader, el desa en un fitxer 
anomenat testfile.html usant saveToFile, i després llegeix el contingut del fitxer
utilitzant readFromFile i l'imprimeix per pantalla.



